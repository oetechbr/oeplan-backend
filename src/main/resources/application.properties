spring.config.import=optional:file:.env[.properties]

# OFF << FATAL << ERROR << WARN << INFO << DEBUG << TRACE << ALL
spring.profiles.active=dev

# APPLICATION

br.tech.oe.plan.application.cloudinary-url=${FILE_HOSTING_URL}
br.tech.oe.plan.application.webapp=${WEBAPP_URL}
br.tech.oe.plan.application.webapp.invite-url=${WEBAPP_INVITE_URL}

# Detect 'HHH000104' issue
spring.jpa.properties.hibernate.query.fail_on_pagination_over_collection_fetch=true

# Enable colors to Intellij terminal/console
spring.output.ansi.enabled=ALWAYS

# DATABASE

## Setup database/driver.
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver

# LOGGING

logging.level.root=WARN
logging.level.org.hibernate=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.cache=TRACE

## Logs the parameters passed to a query.
logging.level.org.hibernate.type=TRACE
## Application logging
logging.level.com.lucasjosino.oeplan=DEBUG

# ERRORS

server.error.include-message=always

# JPA

## Show log for each SQL query
spring.jpa.show-sql=true
## Stop hibernate from create SQL code.
spring.jpa.hibernate.ddl-auto=update
## Format the printed SQL from JPA.
spring.jpa.properties.hibernate.format_sql=true
## Show JPA/Hibernate statistics.
hibernate.generate_statistics=true
spring.jpa.properties.hibernate.generate_statistics=true

# SERVER

server.servlet.session.cookie.timeout=${SERVER_SERVLET_SESSION_COOKIE_TIMEOUT}
server.servlet.session.cookie.http-only=${SERVER_SERVLET_SESSION_COOKIE_HTTP_ONLY}
server.servlet.session.cookie.secure=${SERVER_SERVLET_SESSION_COOKIE_SECURE}
server.servlet.session.cookie.name=${SERVER_SERVLET_SESSION_COOKIE_NAME}
#server.servlet.session.cookie.domain=${SERVER_SERVLET_SESSION_COOKIE_DOMAIN}
server.servlet.session.cookie.path=${SERVER_SERVLET_SESSION_COOKIE_PATH}
server.servlet.session.cookie.same-site=${SERVER_SERVLET_SESSION_COOKIE_SAME_SITE}

## Max file size
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

## Spring session configuration
spring.session.timeout=30m
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=ALWAYS
spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-postgresql.sql
spring.session.jdbc.table-name=SPRING_SESSION

# MAIL

spring.mail.host=${EMAIL_HOSTING_URL}
spring.mail.port=${EMAIL_HOSTING_PORT}
spring.mail.username=${EMAIL_HOSTING_USERNAME}
spring.mail.password=${EMAIL_HOSTING_PASSWORD}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# SWAGGER

# Disable/Enable Swagger UI and Docs.
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

#springdoc.swagger-ui.path=/docs/swagger-ui.html
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.api-docs.resolve-schema-properties=true

# API

oeplan.title=@project.name@
oeplan.description=@project.description@
oeplan.version=@project.version@
oeplan.url=http://localhost:8080
oeplan.docs=${oeplan.url}/docs
oeplan.github=https://github.com/oetechbr/oeplan-backend
oeplan.githubHome=https://github.com/oetechbr
oeplan.apiVersion=v1
oeplan.apiPath=/api
oeplan.apiBaseUrl=${oeplan.apiPath}/${oeplan.apiVersion}
oeplan.apiUrl=${oeplan.url}${oeplan.apiPath}/${oeplan.apiVersion}
oeplan.license=BSD 3-Clause "New" or "Revised" License
oeplan.licenseUrl=https://github.com/oetechbr/oeplan-backend/blob/main/LICENSE